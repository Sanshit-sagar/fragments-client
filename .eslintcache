[{"/Users/sanshitsagar/apps/fragments-ui/src/index.js":"1","/Users/sanshitsagar/apps/fragments-ui/src/reportWebVitals.js":"2","/Users/sanshitsagar/apps/fragments-ui/src/App.js":"3","/Users/sanshitsagar/apps/fragments-ui/src/Routes.js":"4","/Users/sanshitsagar/apps/fragments-ui/src/containers/Home.js":"5","/Users/sanshitsagar/apps/fragments-ui/src/containers/NotFound.js":"6","/Users/sanshitsagar/apps/fragments-ui/src/config.js":"7","/Users/sanshitsagar/apps/fragments-ui/src/containers/Login.js":"8","/Users/sanshitsagar/apps/fragments-ui/src/libs/contextLib.js":"9","/Users/sanshitsagar/apps/fragments-ui/src/components/LoaderButton.js":"10","/Users/sanshitsagar/apps/fragments-ui/src/libs/errorLib.js":"11","/Users/sanshitsagar/apps/fragments-ui/src/libs/hooksLib.js":"12","/Users/sanshitsagar/apps/fragments-ui/src/containers/Signup.js":"13","/Users/sanshitsagar/apps/fragments-ui/src/containers/NewNote.js":"14","/Users/sanshitsagar/apps/fragments-ui/src/libs/awsLib.js":"15","/Users/sanshitsagar/apps/fragments-ui/src/containers/Notes.js":"16","/Users/sanshitsagar/apps/fragments-ui/src/containers/Settings.js":"17","/Users/sanshitsagar/apps/fragments-ui/src/components/UnauthenticatedRoute.js":"18","/Users/sanshitsagar/apps/fragments-ui/src/components/AuthenticatedRoute.js":"19","/Users/sanshitsagar/apps/fragments-ui/src/components/FacebookButton.js":"20","/Users/sanshitsagar/apps/fragments-ui/src/containers/ResetPassword.js":"21","/Users/sanshitsagar/apps/fragments-ui/src/containers/ChangePassword.js":"22","/Users/sanshitsagar/apps/fragments-ui/src/containers/ChangeEmail.js":"23","/Users/sanshitsagar/apps/fragments-ui/src/components/ErrorBoundary.js":"24","/Users/sanshitsagar/apps/fragments-ui/src/containers/Themes.js":"25","/Users/sanshitsagar/apps/fragments-ui/src/containers/Dashboard.js":"26","/Users/sanshitsagar/apps/fragments-ui/src/constants/EmptyBuffer.js":"27","/Users/sanshitsagar/apps/fragments-ui/src/components/TagsList.js":"28"},{"size":1249,"mtime":1612045389815,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1609683650270,"results":"31","hashOfConfig":"30"},{"size":3973,"mtime":1612034838614,"results":"32","hashOfConfig":"30"},{"size":2240,"mtime":1611307996977,"results":"33","hashOfConfig":"30"},{"size":3427,"mtime":1612053161919,"results":"34","hashOfConfig":"30"},{"size":219,"mtime":1609778029417,"results":"35","hashOfConfig":"30"},{"size":1154,"mtime":1612045135127,"results":"36","hashOfConfig":"30"},{"size":2864,"mtime":1612053846897,"results":"37","hashOfConfig":"30"},{"size":170,"mtime":1609795984626,"results":"38","hashOfConfig":"30"},{"size":546,"mtime":1611313024484,"results":"39","hashOfConfig":"30"},{"size":1213,"mtime":1611002263082,"results":"40","hashOfConfig":"30"},{"size":325,"mtime":1609796103496,"results":"41","hashOfConfig":"30"},{"size":4678,"mtime":1611308501085,"results":"42","hashOfConfig":"30"},{"size":6343,"mtime":1612050720835,"results":"43","hashOfConfig":"30"},{"size":258,"mtime":1610248524364,"results":"44","hashOfConfig":"30"},{"size":14334,"mtime":1612054404195,"results":"45","hashOfConfig":"30"},{"size":1007,"mtime":1611313243612,"results":"46","hashOfConfig":"30"},{"size":889,"mtime":1610250873831,"results":"47","hashOfConfig":"30"},{"size":508,"mtime":1610250729409,"results":"48","hashOfConfig":"30"},{"size":1848,"mtime":1610989945780,"results":"49","hashOfConfig":"30"},{"size":4084,"mtime":1610985639846,"results":"50","hashOfConfig":"30"},{"size":2381,"mtime":1610986119660,"results":"51","hashOfConfig":"30"},{"size":2997,"mtime":1610986359659,"results":"52","hashOfConfig":"30"},{"size":572,"mtime":1611001872083,"results":"53","hashOfConfig":"30"},{"size":679,"mtime":1611307890255,"results":"54","hashOfConfig":"30"},{"size":2554,"mtime":1611312591753,"results":"55","hashOfConfig":"30"},{"size":304,"mtime":1611917058185,"results":"56","hashOfConfig":"30"},{"size":3062,"mtime":1612039165172,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"12n6eru",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},"/Users/sanshitsagar/apps/fragments-ui/src/index.js",[],["122","123"],"/Users/sanshitsagar/apps/fragments-ui/src/reportWebVitals.js",[],"/Users/sanshitsagar/apps/fragments-ui/src/App.js",["124"],"import React, { useState, useEffect } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\"; \nimport Nav from \"react-bootstrap/Nav\"; \n\nimport \"./App.css\";\nimport config from \"./config\"; \nimport Routes from \"./Routes\"; \n\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { AppContext } from \"./libs/contextLib\";\nimport { Auth } from \"aws-amplify\";\nimport { onError } from \"./libs/errorLib\";\nimport { Button } from \"react-bootstrap\"; \n\nimport ErrorBoundary from \"./components/ErrorBoundary\"; \nimport ScopedCssBaseline from \"@material-ui/core/ScopedCssBaseline\"; \n\nexport default function App() { \n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n  async function handleLogout() {\n    await Auth.signOut();\n  \n    userHasAuthenticated(false);\n  }\n\n  useEffect(() => { \n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true); }\n    catch(e) {\n      if (e !== 'No current user') {\n        onError(e); \n      }\n    }\n    setIsAuthenticating(false); \n  }\n\n  return (\n    !isAuthenticating && (\n      <ScopedCssBaseline> \n      <div className=\"App container py-3\">\n        <Navbar collapseOnSelect bg=\"light\" variant=\"light\" expand=\"md\" className=\"mb-3\">\n          <LinkContainer to=\"/dashboard\">\n            <Navbar.Brand>\n              <div className=\"Logo\"> \n              / frag / ments / \n              </div>\n            </Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Nav activeKey={window.location.pathname}>\n              {isAuthenticated ? (\n                <>\n                  {/* <LinkContainer to=\"/dashboard\">\n                    <Nav.Link>\n                      <Button variant=\"light\"> \n                        Dashboard\n                      </Button> \n                    </Nav.Link>\n                  </LinkContainer> */}\n\n                   <LinkContainer to=\"/\">\n                    <Nav.Link>\n                      <Button variant=\"light\"> \n                        Cache\n                      </Button> \n                    </Nav.Link>\n                  </LinkContainer>\n\n                  {/* <LinkContainer to=\"/themes\">\n                    <Nav.Link>\n                      <Button variant=\"light\"> \n                        Themes\n                      </Button> \n                    </Nav.Link>\n                  </LinkContainer> */}\n\n                  <LinkContainer to=\"/settings\">\n                    <Nav.Link> \n                      <Button variant=\"light\"> \n                        Profile    \n                      </Button>\n                    </Nav.Link>\n                  </LinkContainer>\n\n                  <div className=\"Logout\"> \n                    <Nav.Link onClick={handleLogout}>\n                      <Button variant=\"dark\"> \n                        Logout\n                      </Button> \n                    </Nav.Link>\n                  </div>\n                </>\n              ) : (\n                <>\n                  <LinkContainer to=\"/signup\">\n                    <Nav.Link>\n                      <Button variant=\"light\"> \n                        SignUp\n                      </Button> \n                    </Nav.Link>\n                  </LinkContainer>\n                  <LinkContainer to=\"/login\">\n                    <Nav.Link>\n                      <Button variant=\"light\"> \n                        Login\n                      </Button> \n                    </Nav.Link>\n                  </LinkContainer>\n                </>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <ErrorBoundary>\n          <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n            <Routes />\n          </AppContext.Provider>\n        </ErrorBoundary>\n      </div>\n      </ScopedCssBaseline> \n    )\n  );\n}\n","/Users/sanshitsagar/apps/fragments-ui/src/Routes.js",[],"/Users/sanshitsagar/apps/fragments-ui/src/containers/Home.js",[],"/Users/sanshitsagar/apps/fragments-ui/src/containers/NotFound.js",[],"/Users/sanshitsagar/apps/fragments-ui/src/config.js",[],"/Users/sanshitsagar/apps/fragments-ui/src/containers/Login.js",["125","126"],"/Users/sanshitsagar/apps/fragments-ui/src/libs/contextLib.js",[],"/Users/sanshitsagar/apps/fragments-ui/src/components/LoaderButton.js",[],"/Users/sanshitsagar/apps/fragments-ui/src/libs/errorLib.js",[],"/Users/sanshitsagar/apps/fragments-ui/src/libs/hooksLib.js",[],"/Users/sanshitsagar/apps/fragments-ui/src/containers/Signup.js",["127"],"import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { useHistory } from \"react-router-dom\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { onError } from \"../libs/errorLib\";\nimport { Auth } from \"aws-amplify\";\nimport \"./Signup.css\";\nimport FacebookButton from \"../components/FacebookButton\"; \n\nexport default function Signup() {\n    const [fields, handleFieldChange] = useFormFields({\n        email: \"\",\n        password: \"\", \n        confirmPassword: \"\", \n        confirmationCode: \"\",\n    });\n    \n    const history = useHistory();\n    const [newUser, setNewUser] = useState(null); \n    const { userHasAuthenticated } = useAppContext(); \n    const [isLoading, setIsLoading] = useState(false);\n    \n    function validateForm() { \n        return (\n            fields.email.length > 0 && fields.password.length > 0 && fields.password === fields.confirmPassword\n        ); \n    }\n    \n    function validateConfirmationForm() {\n        return fields.confirmationCode.length > 0;\n    }\n    \n    async function handleSubmit(event) { \n        event.preventDefault();\n        setIsLoading(true);\n\n        try {\n            const newUser = await Auth.signUp({\n                username: fields.email,\n                password: fields.password, \n            });\n            setIsLoading(false);\n            setNewUser(newUser); \n        } catch (e) {\n            onError(e);\n            setIsLoading(false); \n        }\n    }\n    \n    async function handleConfirmationSubmit(event) {\n        event.preventDefault();\n        setIsLoading(true);\n        \n        try {\n            await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n            await Auth.signIn(fields.email, fields.password);\n            userHasAuthenticated(true);\n            history.push(\"/\"); \n        } catch (e) {\n            onError(e);\n            setIsLoading(false); \n        }\n    }\n    \n    function renderConfirmationForm() { \n        return (\n            <Form onSubmit={handleConfirmationSubmit}> \n                <Form.Group controlId=\"confirmationCode\" size=\"lg\">\n                <Form.Label>Confirmation Code</Form.Label>\n                <Form.Control\n                    autoFocus\n                    type=\"tel\"\n                    onChange={handleFieldChange}\n                    value={fields.confirmationCode}\n                />\n                <Form.Text muted>Please check your email for the code.</Form.Text>\n            </Form.Group>\n            <LoaderButton\n                block\n                size=\"lg\"\n                type=\"submit\"\n                variant=\"success\" isLoading={isLoading} disabled={!validateConfirmationForm()}\n            >\n                Verify\n            </LoaderButton>\n        </Form> );\n    }\n\n    function renderForm() { \n        return (\n            <Form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"email\" size=\"lg\">\n                  \n                    <hr />\n                    <Form.Label>\n                        <h5> Email</h5>\n                    </Form.Label> \n                    <Form.Control\n                        autoFocus\n                        type=\"email\" \n                        value={fields.email}\n                        onChange={handleFieldChange}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"password\" size=\"lg\">\n                    <Form.Label>\n                        <h5> Password </h5>\n                    </Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        value={fields.password}\n                        onChange={handleFieldChange}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"confirmPassword\" size=\"lg\">\n                <Form.Label>\n                    <h5> Confirm Password </h5>\n                </Form.Label> \n                <Form.Control\n                    type=\"password\"\n                    onChange={handleFieldChange}\n                    value={fields.confirmPassword}\n                />\n            </Form.Group>\n            <LoaderButton\n                block\n                size=\"lg\"\n                type=\"submit\"\n                variant=\"success\"\n                isLoading={isLoading}\n                disabled={!validateForm()}\n            >\n                Signup\n            </LoaderButton>\n        </Form> \n        );\n    }\n\n    return (\n        <div className=\"Signup\">\n            {newUser === null ? renderForm() : renderConfirmationForm()}\n        </div>\n    );\n}","/Users/sanshitsagar/apps/fragments-ui/src/containers/NewNote.js",["128","129","130"],"import React, { useRef, useState } from \"react\"; \nimport Form from \"react-bootstrap/Form\";\nimport { useHistory } from \"react-router-dom\";\nimport LoaderButton from \"../components/LoaderButton\"; \nimport { onError } from \"../libs/errorLib\";\nimport config from \"../config\"; import \"./NewNote.css\";\nimport { API } from \"aws-amplify\";\nimport { s3Upload } from \"../libs/awsLib\"; \nimport { makeStyles } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Divider from '@material-ui/core/Divider';\nimport FaceIcon from \"@material-ui/icons/Face\"; \nimport Filter1 from \"@material-ui/icons/Filter1\"; \nimport Filter2 from \"@material-ui/icons/Filter2\"; \nimport TextField from '@material-ui/core/TextField'; \n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function NewNote() {\n\n    const file = useRef(null);\n    const history = useHistory();\n    const [content, setContent] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    const [moniker, setMoniker] = useState(\"@\"); \n    const [tag1, setTag1] = useState(\"#1234\");\n    const [tag2, setTag2] = useState(\"#\");\n    const classes = useStyles();\n\n    \n    function validateForm() { \n        return content.length > 0;\n    }\n    \n    function handleFileChange(event) { \n        file.current = event.target.files[0];\n    }\n    \n    async function handleSubmit(event) {\n        event.preventDefault();\n        \n        if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n            alert(\n                `Please pick a file smaller than ${\n                    config.MAX_ATTACHMENT_SIZE / 1000000\n                } MB.`\n            );\n            return;\n        }\n        \n        setIsLoading(true);\n        \n        try {\n            const attachment = file.current ? await s3Upload(file.current) : null;\n\n            await createNote({ content, attachment, moniker, tag1, tag2 });\n            history.push(\"/\");\n        } catch (e) {\n            onError(e);\n            setIsLoading(false);\n        }\n    }\n\n    function createNote(note) {\n        return API.post(\"notes\", \"/notes\", {\n            body: note \n        });\n    }\n\n    function AttachmentCard() {\n        return (\n            <Form.Group controlId=\"file\">\n                <Form.Label>Attachment</Form.Label>\n                <Form.Control onChange={handleFileChange} type=\"file\" /> \n            </Form.Group>\n        ); \n    }\n\n    function SnippetEditor() {\n        return (\n            <Form.Group controlId=\"content\">\n                <Form.Control\n                    value={content}\n                    as=\"textarea\"\n                    onChange={(e) => setContent(e.target.value)}\n                />\n            </Form.Group>\n        ); \n    }\n\n    function handleMonikerChange(updatedMoniker) {\n        if(updatedMoniker.substring(0,1) != \"@\") {\n            updatedMoniker = \"@\" + updatedMoniker; \n        }\n        setMoniker(updatedMoniker); \n    }\n\n    function handleTag1Update(updatedTag1) {\n            if(updatedTag1.substring(0,1) != \"#\") {\n                updatedTag1 = \"#\" + updatedTag1; \n            }\n            setTag1(updatedTag1); \n    }\n\n    function handleTag2Update(updatedTag2) {\n            if(updatedTag2.substring(0,1) != \"#\") {\n                updatedTag2 = \"#\" + updatedTag2; \n            }\n            setTag2(updatedTag2); \n    }\n\n\n    return (\n        <div className=\"NewNote\">\n            <Form onSubmit={handleSubmit}> \n                <SnippetEditor /> \n                <AttachmentCard /> \n\n                <div className={classes.root}>\n\n                    <List component=\"nav\" aria-label=\"main mailbox folders\">\n                        <ListItem autofocus>\n                            <ListItemIcon>\n                                <FaceIcon />\n                            </ListItemIcon>\n                    \n                            <ListItemText primary={ \n                                <TextField id=\"filled-basic\" variant=\"filled\" \n                                        placeholder=\"@\" size =\"medium\"\n                                        value={ moniker } \n                                        onChange={(e) => handleMonikerChange(e.target.value)}\n                                />} \n                            />\n                        </ListItem>\n                    </List>\n\n                    <Divider />\n\n                    <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n                        <ListItem autofocus>\n                            <ListItemIcon>\n                                <Filter1 />\n                            </ListItemIcon> \n\n                            <ListItemText primary= {\n                                <TextField id=\"filled-basic\" variant=\"outlined\" \n                                            placeholder=\"#\" size =\"medium\"\n                                            value={ tag1 } \n                                            onChange={(e) => handleTag1Update(e.target.value)}\n                                /> }\n                            />\n                        </ListItem>\n\n                        <ListItem autofocus>\n                            <ListItemIcon>\n                                <Filter2 />\n                            </ListItemIcon>\n\n                            <ListItemText secondary= {\n                                <TextField id=\"filled-basic\" variant=\"outlined\" \n                                            placeholder=\"#\" size =\"medium\"\n                                            value={ tag2 } \n                                            onChange={(e) => handleTag2Update(e.target.value)}                  \n                                /> }\n                            />\n                        </ListItem>\n                    </List>\n                </div>\n                \n                <LoaderButton block type=\"submit\" size=\"lg\" variant=\"primary\" isLoading={isLoading} disabled={!validateForm()}>\n                    <h5> Create </h5> \n                </LoaderButton>\n            </Form>\n        </div>\n    );\n}","/Users/sanshitsagar/apps/fragments-ui/src/libs/awsLib.js",[],"/Users/sanshitsagar/apps/fragments-ui/src/containers/Notes.js",["131","132","133","134","135","136"],"/Users/sanshitsagar/apps/fragments-ui/src/containers/Settings.js",["137","138","139","140","141","142","143"],"import React, { useState, useEffect } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { useHistory } from \"react-router-dom\";\nimport { onError } from \"../libs/errorLib\";\nimport config from \"../config\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\n\n\nexport default function Settings() {\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n\n  function billUser(details) {\n    return API.post(\"notes\", \"/billing\", {\n      body: details\n    });\n  }\n\n  return (\n    <div className=\"Settings\">\n        <LinkContainer to=\"/settings/email\">\n          <LoaderButton block bsSize=\"large\">\n            <h5> Update Email </h5> \n          </LoaderButton>\n        </LinkContainer>\n        <LinkContainer to=\"/settings/password\">\n          <LoaderButton block dark bsSize=\"large\">\n            <h5> Update Password </h5> \n          </LoaderButton>\n        </LinkContainer>\n      {/* <hr />\n     */}\n    </div>\n  );\n}","/Users/sanshitsagar/apps/fragments-ui/src/components/UnauthenticatedRoute.js",[],"/Users/sanshitsagar/apps/fragments-ui/src/components/AuthenticatedRoute.js",[],"/Users/sanshitsagar/apps/fragments-ui/src/components/FacebookButton.js",[],"/Users/sanshitsagar/apps/fragments-ui/src/containers/ResetPassword.js",[],"/Users/sanshitsagar/apps/fragments-ui/src/containers/ChangePassword.js",[],"/Users/sanshitsagar/apps/fragments-ui/src/containers/ChangeEmail.js",[],"/Users/sanshitsagar/apps/fragments-ui/src/components/ErrorBoundary.js",[],"/Users/sanshitsagar/apps/fragments-ui/src/containers/Themes.js",[],"/Users/sanshitsagar/apps/fragments-ui/src/containers/Dashboard.js",[],"/Users/sanshitsagar/apps/fragments-ui/src/constants/EmptyBuffer.js",[],["144","145"],"/Users/sanshitsagar/apps/fragments-ui/src/components/TagsList.js",["146","147","148","149"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Divider from '@material-ui/core/Divider';\n\nimport FaceIcon from \"@material-ui/icons/Face\"; \nimport Filter1 from \"@material-ui/icons/Filter1\"; \nimport Filter2 from \"@material-ui/icons/Filter2\"; \n\nimport TextField from '@material-ui/core/TextField'; \n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function SimpleList() {\n\n  const [moniker, setMoniker] = useState(\"@\"); \n  const [tag1, setTag1] = useState(\"#\");\n  const [tag2, setTag2] = useState(\"#\");\n  const classes = useStyles();\n\n  function handleMonikerChange(updatedMoniker) {\n        if(updatedMoniker.substring(0,1) != \"@\") {\n            updatedMoniker = \"@\" + updatedMoniker; \n        }\n        setMoniker(updatedMoniker); \n    }\n\n  function handleTag1Update(updatedTag1) {\n        if(updatedTag1.substring(0,1) != \"#\") {\n            updatedTag1 = \"#\" + updatedTag1; \n        }\n        setTag1(updatedTag1); \n    }\n\n  function handleTag2Update(updatedTag2) {\n        if(updatedTag2.substring(0,1) != \"#\") {\n            updatedTag2 = \"#\" + updatedTag2; \n        }\n        setTag2(updatedTag2); \n    }\n\n  return (\n    <div className={classes.root}>\n\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        <ListItem autofocus>\n            <ListItemIcon>\n                <FaceIcon />\n            </ListItemIcon>\n          \n\n            <ListItemText primary={ \n                <TextField id=\"filled-basic\" variant=\"filled\" \n                        placeholder=\"@\" size =\"medium\"\n                        value={ moniker } \n                        onChange={(e) => handleMonikerChange(e.target.value)}\n                /> } \n            />\n        </ListItem>\n      </List>\n\n      <Divider />\n\n      <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n        <ListItem autofocus>\n            <ListItemIcon>\n                <Filter1 />\n            </ListItemIcon> \n\n            <ListItemText primary= {\n                <TextField id=\"filled-basic\" variant=\"outlined\" \n                            placeholder=\"#\" size =\"medium\"\n                            value={ tag1 } onChange={(e) => handleTag1Update(e.target.value)}\n                /> }\n            />\n        </ListItem>\n\n        <ListItem href=\"#simple-list\">\n            <ListItemIcon>\n                <Filter2 />\n            </ListItemIcon>\n\n            <ListItemText secondary= {\n                <TextField id=\"filled-basic\" variant=\"outlined\" \n                            placeholder=\"#\" size =\"medium\"\n                            value={ tag2 } onChange={(e) => handleTag2Update(e.target.value)}                  /> }\n           />\n        </ListItem>\n      </List>\n    </div>\n  );\n}",["150","151"],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":14},{"ruleId":"156","severity":1,"message":"160","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":22},{"ruleId":"156","severity":1,"message":"161","line":29,"column":14,"nodeType":"158","messageId":"159","endLine":29,"endColumn":27},{"ruleId":"156","severity":1,"message":"160","line":10,"column":8,"nodeType":"158","messageId":"159","endLine":10,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":103,"column":42,"nodeType":"164","messageId":"165","endLine":103,"endColumn":44},{"ruleId":"162","severity":1,"message":"163","line":110,"column":43,"nodeType":"164","messageId":"165","endLine":110,"endColumn":45},{"ruleId":"162","severity":1,"message":"163","line":117,"column":43,"nodeType":"164","messageId":"165","endLine":117,"endColumn":45},{"ruleId":"156","severity":1,"message":"166","line":65,"column":10,"nodeType":"158","messageId":"159","endLine":65,"endColumn":23},{"ruleId":"156","severity":1,"message":"167","line":65,"column":25,"nodeType":"158","messageId":"159","endLine":65,"endColumn":41},{"ruleId":"162","severity":1,"message":"168","line":215,"column":27,"nodeType":"164","messageId":"165","endLine":215,"endColumn":29},{"ruleId":"162","severity":1,"message":"163","line":272,"column":40,"nodeType":"164","messageId":"165","endLine":272,"endColumn":42},{"ruleId":"162","severity":1,"message":"163","line":279,"column":37,"nodeType":"164","messageId":"165","endLine":279,"endColumn":39},{"ruleId":"162","severity":1,"message":"163","line":286,"column":37,"nodeType":"164","messageId":"165","endLine":286,"endColumn":39},{"ruleId":"156","severity":1,"message":"169","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"156","severity":1,"message":"170","line":4,"column":10,"nodeType":"158","messageId":"159","endLine":4,"endColumn":17},{"ruleId":"156","severity":1,"message":"157","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":14},{"ruleId":"156","severity":1,"message":"171","line":11,"column":9,"nodeType":"158","messageId":"159","endLine":11,"endColumn":16},{"ruleId":"156","severity":1,"message":"172","line":12,"column":10,"nodeType":"158","messageId":"159","endLine":12,"endColumn":19},{"ruleId":"156","severity":1,"message":"173","line":12,"column":21,"nodeType":"158","messageId":"159","endLine":12,"endColumn":33},{"ruleId":"156","severity":1,"message":"174","line":14,"column":12,"nodeType":"158","messageId":"159","endLine":14,"endColumn":20},{"ruleId":"152","replacedBy":"175"},{"ruleId":"154","replacedBy":"176"},{"ruleId":"156","severity":1,"message":"177","line":24,"column":10,"nodeType":"158","messageId":"159","endLine":24,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":36,"column":42,"nodeType":"164","messageId":"165","endLine":36,"endColumn":44},{"ruleId":"162","severity":1,"message":"163","line":43,"column":39,"nodeType":"164","messageId":"165","endLine":43,"endColumn":41},{"ruleId":"162","severity":1,"message":"163","line":50,"column":39,"nodeType":"164","messageId":"165","endLine":50,"endColumn":41},{"ruleId":"152","replacedBy":"178"},{"ruleId":"154","replacedBy":"179"},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'config' is defined but never used.","Identifier","unusedVar","'FacebookButton' is defined but never used.","'handleFbLogin' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'submitContent' is assigned a value but never used.","'setSubmitContent' is assigned a value but never used.","Expected '===' and instead saw '=='.","'useEffect' is defined but never used.","'onError' is defined but never used.","'history' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'billUser' is defined but never used.",["180"],["181"],"'ListItemLink' is defined but never used.",["180"],["181"],"no-global-assign","no-unsafe-negation"]